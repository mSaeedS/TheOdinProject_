CSS Notes:
1. Universal Selector:

* {
  color: purple;
}

2. Type Selectors:
<!-- index.html -->

<div>Hello, World!</div>
<div>Hello again!</div>
<p>Hi...</p>
<div>Okay, bye.</div>

/* styles.css */

div {
  color: white;
}


3. Class Selectors:
<!-- index.html -->

<div class="alert-text">Please agree to our terms of service.</div>

/* styles.css */

.alert-text {
  color: red;
}

Another thing you can do with the class attribute is to add multiple classes to a single element as a space-separated list, such as class="alert-text severe-alert".

4. ID Selectors:
<!-- index.html -->

<div id="title">My Awesome 90's Page</div>

/* styles.css */

#title {
  background-color: red;
}

5. Grouping Selectors:
.read,
.unread {
  color: white;
  background-color: black;
}

.read {
  /* several unique declarations */
}

.unread {
  /* several unique declarations */                 
}

6. Chaining Selectors:
<div>
  <div class="subsection header">Latest Posts</div>
  <p class="subsection preview">This is where a preview for a post might go.</p>
</div>

.subsection.header {
  color: red;
}

This is will only style that has both subsection and header classes. Can be done with classes and id aswell.

7. Descendant combinator:
<!-- index.html -->

<div class="ancestor">
  <!-- A -->
  <div class="contents">
    <!-- B -->
    <div class="contents"><!-- C --></div>
  </div>
</div>

<div class="contents"><!-- D --></div>

/* styles.css */

.ancestor .contents {
  /* some declarations */
}

so this will see if class ancestor has child class of ancestor if it does then apply style


-- Properties -- 
1. color and background-color
p {
  /* hex example: */
  color: #1100ff;
}

p {
  /* rgb example: */
  color: rgb(100, 0, 127);
}

p {
  /* hsl example: */
  color: hsl(15, 82%, 56%);
}

2. Typography
font-family
font-size
font-weight boldness of font
text-align: center

3. Images
height
width

-- External CSS --
<!-- index.html -->

<head>
  <link rel="stylesheet" href="styles.css">
</head>


 -- Internal CSS --
 <head>
  <style>
    div {
      color: white;
      background-color: black;
    }

    p {
      color: red;
    }
  </style>
</head>
<body>
  ...
</body>

-- Inline CSS --
<body>
  <div style="color: white; background-color: black;">...</div>
</body>

#############LECTURE 2##############
1. Specificity: ID>Class>Type. More definied = more Specificity
2. Inheritance: Child div inherits parent div unless:
<!-- index.html -->

<div id="parent">
  <div class="child"></div>
</div>

3. Rule order: If there is conflict not solved by specificty and inheriance then last defined style will be applied

#############LECTURE 4#############
Everything is rectangle/box in css
* {
  outline: 2px solid red;
}

Padding: Content aur border ka gap. Top right left bottom
1 defined = all same
2 defined = top,bottom same and left,right same
Border: Margin aur content ki sepration
Margin: dusre box ke border ka gap

box-sizing : content-box Basically box increase krta ha as you add on margin and border
box-sizing : border-box box remains same and content size is adjusted with margin and border


#############LECTURE 5#############
Default style is display: block. 
Block elements will appear on the page stacked atop each other, each new element starting on a new line.
Inline elements appear in line with whatever elements they are placed beside
Divs allow us to divide the page into different blocks and apply styling to those blocks
Span is an inline-level element by default.